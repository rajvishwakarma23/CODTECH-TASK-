#include <WiFi.h>
#include <HTTPClient.h>
#include <Servo.h>

// Wi-Fi credentials
const char* ssid = "YourWiFiSSID";
const char* password = "YourWiFiPassword";

// API endpoint to send data
const char* serverName = "http://example.com/api/dustbin"; // Replace with your server URL

// Pin definitions
#define TRIG_PIN 5
#define ECHO_PIN 18
#define SERVO_PIN 19

Servo dustbinServo;

// Variables
long duration;
int distance;
int dustbinFullThreshold = 10; // Threshold for 'full' in cm

void setup() {
  Serial.begin(115200);

  // Initialize Wi-Fi
  WiFi.begin(ssid, password);
  Serial.print("Connecting to Wi-Fi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println(" Connected!");

  // Servo setup
  dustbinServo.attach(SERVO_PIN);
  dustbinServo.write(0); // Close the lid

  // Ultrasonic sensor setup
  pinMode(TRIG_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);
}

void loop() {
  // Measure distance
  digitalWrite(TRIG_PIN, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIG_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG_PIN, LOW);

  duration = pulseIn(ECHO_PIN, HIGH);
  distance = duration * 0.034 / 2;

  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.println(" cm");

  // Open lid if user is near
  if (distance < 30) { // User detection threshold
    dustbinServo.write(90); // Open lid
    delay(5000);            // Keep open for 5 seconds
    dustbinServo.write(0);  // Close lid
  }

  // Send dustbin status to server
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;
    http.begin(serverName);
    http.addHeader("Content-Type", "application/json");

    String jsonPayload = String("{\"fill_level\":") + distance + "}";
    int httpResponseCode = http.POST(jsonPayload);

    if (httpResponseCode > 0) {
      Serial.print("HTTP Response code: ");
      Serial.println(httpResponseCode);
    } else {
      Serial.print("Error code: ");
      Serial.println(httpResponseCode);
    }
    http.end();
  } else {
    Serial.println("Wi-Fi Disconnected");
  }

  delay(10000); // Wait 10 seconds before the next loop
}
